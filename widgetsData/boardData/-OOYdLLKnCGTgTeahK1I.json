{
  "addCellHeaderTemplate": false,
  "addCustomComputedProperty": false,
  "addCustomComputedPropertyForLeftHeaders": false,
  "addCustomComputedPropertyForTopHeaders": false,
  "addPreventDropCondition": false,
  "allowUserSpecificLeftHeaders": false,
  "allowUserSpecificTopHeaders": false,
  "blankColumnDisplayName": "",
  "blankRowDisplayName": "",
  "blockDragging": false,
  "blockHorizontalDragging": false,
  "blockVerticalDragging": false,
  "cardBackgroundColorCoding": "",
  "cardClassBindings": "",
  "cellBackgroundColorCoding": "",
  "cellHeaderTemplate": "",
  "customComputedProperty": "",
  "customComputedPropertyForLeftHeaders": "",
  "customComputedPropertyForTopHeaders": "",
  "editCardFunction": "",
  "functionForMatchingToCustomLeftHeaders": "",
  "functionForMatchingToCustomTopHeaders": "",
  "itemsStorage": "",
  "laneCol": "resource",
  "lanesStorage": "opportunityLines",
  "leftLaneCol": "workOrderStatus",
  "onChangeScript": "",
  "preventDropCondition": "",
  "reloadOnDrag": false,
  "showLeftHeaderTooltips": false,
  "showLeftHeaderTotals": false,
  "showTopHeaderTooltips": false,
  "showTopHeaderTotals": false,
  "smallTemplate": "",
  "sortIndexCol": "",
  "template": "<template v-if=\"$getGrid('workOrderOperations')\">\r\n  <div class=\"kanban-card\">\r\n    <strong class=\"IDtitle\">ID: {{ item.name }}</strong>\r\n    <div class=\"ERPdemocard\">\r\n      <!-- Left side (Details) -->\r\n      <div>\r\n        <p style=\"margin: 0px; opacity: 0.8\">{{ item.description }}</p>\r\n        <p style=\"margin: 0px; opacity: 0.8\">Quantity: {{ item.quantity }}</p>\r\n        <p style=\"margin: 0px; opacity: 0.8\">Due: {{ item.$dueDate$display }}</p>\r\n      </div>\r\n      <!-- Right side (Employee Image and Icon) -->\r\n    </div>\r\n  </div>\r\n  <div class=\"boardOuterCon\">\r\n    <div \r\n      v-for=\"(totalHours, name) in $getGrid('workOrderOperations')\r\n        .filter(operation => operation.workOrder === item.rowKey)\r\n        .reduce((groups, operation) => {\r\n          const name = operation?.name || 'Unknown';\r\n          const hours = parseFloat(operation.rateSpeedPerUnit) || 0;\r\n          if (!groups[name]) {\r\n            groups[name] = 0;\r\n          }\r\n          groups[name] += hours; \r\n          return groups;\r\n        }, {})\" \r\n      :key=\"name\"\r\n    >\r\n      <div class=\"boardCon\">\r\n        <div class=\"boardCard\">\r\n          <span class=\"departmentShortCodeTxt\">{{ name.slice(3, 5) }} -</span>\r\n          <span>{{ parseInt(totalHours) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>",
  "titleCol": "name",
  "updateRuleFunctionForCustomLeftHeaders": "",
  "updateRuleFunctionForCustomTopHeaders": "",
  "visibleLanes": [
    "_BLANK",
    "-NeEtrvSQ3iZeunsXVta",
    "-NhgWKZ57I5yhByLyz7M",
    "-NhgWS7mMulw7loJsmL9",
    "-Nhg_ZmkV9wR3pUqwakc"
  ],
  "visibleLeftLanes": [
    "-Nha4KNKbqueef4iB9L2",
    "-Nha4KNyiUPQD_Dfq2Xw",
    "-Nha4KO8D_jCGQ5_QqAu",
    "_BLANK"
  ],
  "workflow": ""
}